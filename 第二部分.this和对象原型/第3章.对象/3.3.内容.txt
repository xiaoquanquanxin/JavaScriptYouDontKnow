1.键访问：a.b，b必须符合标识符的命名规则。
2.属性访问：a['b']：'b'是一个字符串，空串都行。
3.对于数组，是一个构造结构复杂的特殊的对象。进行数组成员访问时，array[0]的下标也被转换为字符串，所以array[0]和array['0']是一样的。
4.数组有数组的方法，对象有对象的方法。它们都有各自的优化，不应该混乱使用。
5.技术角度讲，函数永远不会属于一个对象，a.b()的调用只是给函数绑定了一个执行上下文。
6.复制对象：toString可以序列化一个函数的源代码，但结果取决于JavaScript的具体实现，有差异。
7.es6的Object.assign(目标对象，...源对象)，可以浅复制一个对象。
8.属性描述符：4个：value、writable、configurable、enumerable。
writable：可改，默认为true。为false时忽略赋值；'use strict'下报错。
configurable：可配置[修改属性描述符 或 删除属性]，默认为true。为false时，修改属性描述符会报错；删除属性会忽略，'use strict'下报错。
enumerable：可枚举性，默认违反true。为false时不会被for...in枚举。

9.对象的特性：3个：preventExtensions、seal、freeze
preventExtensions：阻止拓展：禁止添加属性。忽略；'use strict'下添加会报错。
seal：封印：将所有属性描述符configurable设置为false，并且不能添加、删除属性。忽略，'use strict'下报错。
freeze：冻结：只读，忽略操作，'use strict'下报错。

10.访问描述符：2个：getter、setter，setter忽略writable。
[[Put]]算法会大致检查这些内容：
    1.检查是否是访问描述符？是：调用setter，仅有getter，忽略操作。
    2.否：属性描述符writable是否为true？是：赋值，否：忽略，'use strict'下报错。
    3.没有属性描述符：添加新值。

11.浅不变性：对于这些属性或对象的特性配置，只针对对象本身，对象引用的对象保持不变，称为浅不变性。
12.属性存在性：
object.hasOwnProperty：自己有某个属性
a in b：自己有某个属性
for...in：遍历自己以及原型链上的全部可枚举属性。
keys：自身可枚举属性。
Object.getOwnPropertyNames：自身的全部属性，除Symbol。
Object.ownKeys：自身全部类型的全部属性，包括Symbol。
